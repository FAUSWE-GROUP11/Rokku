from multiprocessing import Process, Queue

from src.pi_to_pi import publisher, subscriber


def set_up_pub_sub(prefix: str, pub_suffix: str, sub_suffix: str):
    """
    Utility function to set up pub and sub, using 'prefix/pub_suffix' as the
    topic for publishing, and 'prefix/sub_suffix' as the topic for subscription.

    Args:
        prefix:     A 64-bit hashed string, generated by user-input public_id
                    and an internal salt.
        pub_suffix: Suffix for the publishing topic.
        sub_suffix: Suffix for the subscription topic
    Return:
        publihser object, message queue, and a listening process for subscriber
    Raises:
        None
    """
    # publisher from rpi_in to rpi_out
    pub = publisher.Publisher(topic=f"{prefix}/{pub_suffix}")
    msg_q = Queue()
    # subscriber listening messages from rpi_out to rpi_in
    sub = subscriber.Subscriber(msg_q, topic=f"{prefix}/{sub_suffix}")
    # listen in a separate process
    listen_proc = Process(
        name="Subscriber's Listening Process", target=sub.start_listen, args=()
    )
    listen_proc.start()

    return pub, msg_q, listen_proc
